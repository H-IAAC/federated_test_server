<html>

<head>
    <title>H-IAAC - Federated Test</title>
    <link href="https://fonts.googleapis.com/css?family=Lato:100" rel="stylesheet">
    <link href="/styles.css" rel="stylesheet">
    <script src="/api.js"></script>
    <script src="/config.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
</head>

<body>

    <h1>H-IAAC - Federated Config Tool</h1>

    <div class="grid-container-setup">
        <!-- Android client config -->
        <div class="grid-child">
            <h2>Devices Setup</h2>
            <div class="setup-android">
                <form action="/setConfig" method="POST">
                    <label for="fold">Fold:</label>
                    <select onchange="setConfiguration()" name="fold" id="fold">
                        <option value="0">0</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                    </select>
                </form>
            </div>
        </div>

        <!-- Flower server config -->
        <div class="grid-child">
            <h2>Flower Server Setup</h2>
            <div class="setup-flower">

                <!-- Config form -->
                <div class="grid-container-flower">
                    <!-- Row 0 -->
                    <div class="grid-child">
                        <label id="flower_url">Flower address:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="flower_address">
                    </div>
                    <div class="grid-child">
                        <label>Flower port:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="flower_port" title="Default values: Prod 8083 and Test 8073">
                    </div>
                    <div class="grid-child">
                        <label>Server API port:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="flower_api_port" title="Default values: Prod 8082 and Test 8072">
                    </div>

                    <!-- Row 1 -->
                    <div class="grid-child">
                        <label>min_available_clients:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="min_available_clients">
                    </div>
                    <div class="grid-child">
                        <label>num_rounds:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="num_rounds">
                    </div>
                    <div class="grid-child"></div>
                    <div class="grid-child"></div>

                    <!-- Row 2 -->
                    <div class="grid-child">
                        <label>min_fit_clients:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="min_fit_clients">
                    </div>
                    <div class="grid-child">
                        <label>fraction_fit:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="fraction_fit">
                    </div>
                    <div class="grid-child">
                        <label>batch_size:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="batch_size">
                    </div>

                    <!-- Row 3 -->
                    <div class="grid-child">
                        <label>min_eval_clients:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="min_eval_clients">
                    </div>
                    <div class="grid-child">
                        <label>fraction_eval:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="fraction_eval">
                    </div>
                    <div class="grid-child">
                        <label>local_epochs:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="local_epochs">
                    </div>
                </div>

                <div class="grid-select">
                    <label>Client Selection:</label>
                    <select id="algorithms_select" onchange="onAlgorithmSelected()">
                    </select>
                </div>

                <!-- Config form -->
                <div class="grid-container-flower" id="grid-algorithms_params">
                    
                </div>

                <div>
                    <button onclick="startFlowerServer()">Start</button>
                    <button onclick="stopFlowerServer()">Stop</button>
                    <button onclick="getFlowerStatus()">Refresh</button>
                    <button onclick="goToLogs()">Logs</button>
                </div>
                <label id="flower_server_response">---</label>
            </div>
        </div>
    </div>

    <h2> Remote Devices </h2>
    <div class="devices">
        <form action="/reset" method="POST">
            <button type="submit" id="newtestBtn" hidden>Reset</button>
        </form>
        <table id="table">
            <tr>
                <th>Fold</th>
                <th>Client</th>
                <th>Device Info</th>
                <th>Status</th>
            </tr>
            <% for( var i=0; i < devices.length; i++){ %>
                <tr>
                    <td>
                        <%= devices[i][0] %>
                    </td>
                    <td>
                        <%= devices[i][1] %>
                    </td>
                    <td>
                        <%= devices[i][2] %>
                    </td>
                    <td>
                        <%= devices[i][3] %>
                    </td>
                </tr>
                <% } %>
        </table>
    </div>
</body>

<script type="text/javascript">

    var flower_url = $('#flower_address')[0];
    var flower_port = $('#flower_port')[0];
    var flower_api_port = $('#flower_api_port')[0];
    var fraction_fit = $('#fraction_fit')[0];
    var fraction_eval = $('#fraction_eval')[0];
    var min_fit_clients = $('#min_fit_clients')[0];
    var min_eval_clients = $('#min_eval_clients')[0];
    var min_available_clients = $('#min_available_clients')[0];
    var batch_size = $('#batch_size')[0];
    var local_epochs = $('#local_epochs')[0];
    var num_rounds = $('#num_rounds')[0];
    var flower_status = $('#flower_server_response')[0];
    var algorithms_select = $('#algorithms_select')[0];
    var algorithms_params_div = $('#grid-algorithms_params')[0];

    flower_url.value = "<%= flower_server %>";
    flower_port.value = "<%= flower_port %>";
    flower_api_port.value = "<%= flower_api_port %>";

    // Get the initial value for 'fold' (defined on index.js)
    var fold = document.getElementById("fold");
    fold.value = <%= fold %>;

    // Get the previous algorithm values used by the user
    var selected_algorithm = `<%- algorithm_name %>`;
    var selected_algorithm_params = JSON.parse(`<%- algorithm_params %>`);

    // Get the default options, to the displayed to the user
    var algorithms_options = JSON.parse(`<%- algorithms_options %>`);

    // For each algorith option, get the name the use it in the select UI element
    algorithms_options.algorithms.forEach((algo) => {
        let name = Object.keys(algo)[0];
        let value = Object.values(algo)[0];

        // If algorithm previous selected by the user, is the same from the default options, then
        // use the latest params entered, instead of the default options.
        if (selected_algorithm == name) {
            // create new 'select' option, using the user custom paramenters
            algorithms_select.options[algorithms_select.options.length] = new Option(name,
                                                                                     JSON.stringify(selected_algorithm_params));
        } else {
            // create new 'select' option, using the user default paramenters
            algorithms_select.options[algorithms_select.options.length] = new Option(name,
                                                                                     JSON.stringify(value));
        }
    });
 
    // Check if there is an algorithm pre-selected, to set in the 'select' component
    for (var i=0; i<algorithms_select.options.length; i++) {
        if ("<%= algorithm_name %>" == algorithms_select.options[i].text) {
            
            if (algorithms_select.options[i].selected == false) {
                algorithms_select.options[i].selected = true;
                onAlgorithmSelected();
            }
        }
    }

    // Get status from Flower server, to update UI with information if the server is running or not
    getFlowerStatus();

    // Update options based on the selected algorithm
    function onAlgorithmSelected() {
        let config_json = JSON.parse(algorithms_select.value);

        remove(algorithms_params_div);

        jQuery.each(config_json, function(key, val) {
            add(algorithms_params_div, key, val);
        });
    }

    // Send configuration parameters to the server
    function setConfiguration() {
        // Get values from algorithm options
        let current_algorithm_config = get(JSON.parse(algorithms_select.value));

        post('/setConfig/', { fold: fold.value,
                              flower_url: flower_url.value,
                              flower_port: flower_port.value,
                              flower_api_port: flower_api_port.value,
                              algorithm_name: algorithms_select.options[algorithms_select.selectedIndex].text,
                              algorithm_params: JSON.stringify(current_algorithm_config) });
    }

    function goToLogs() {
        if (flower_url.value)
            window.open("http://" + flower_url.value + ":" + flower_api_port.value, "_blank");
        else
            flower_status.innerHTML = "Missing flower address.";
    }

    function stopFlowerServer() {
        postOnFlowerServer('/stop');
    }

    function startFlowerServer() {

    fetch('http://' + flower_url.value + ":" + flower_api_port.value + '/status')
        .then(function(response) {
            return response.json();
        })
        .then(function(data) {
            if (!data.isRunning) {
                // Save parameters from this execution
                setConfiguration();

                // Call api to start flower execution
                postOnFlowerServer('/run');

                // After send the request, get a new status after 3 sec.
                setTimeout(function() {
                    getFlowerStatus();
                }, 3000);

                flower_status.innerHTML = "Flower server starting.";
            } else {
                flower_status.innerHTML = "Flower server is already running.";
            }
        })
        .catch(error => {
            //
            flower_status.innerHTML = error.message;
        });
    }

</script>

</html>