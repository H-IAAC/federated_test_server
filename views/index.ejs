<html>

<head>
    <title>H-IAAC - Federated Test</title>
    <link href="https://fonts.googleapis.com/css?family=Lato:100" rel="stylesheet">
    <link href="/styles.css" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
</head>

<body>

    <h1>H-IAAC - Federated Config Tool</h1>

    <div class="grid-container-setup">
        <!-- Android client config -->
        <div class="grid-child">
            <h2>Devices Setup</h2>
            <div class="setup-android">
                <form action="/setConfig" method="POST">
                    <label for="fold">Fold:</label>
                    <select onchange="onFoldChanged()" name="fold" id="fold">
                        <option value="0">0</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                    </select>
                </form>
            </div>
        </div>

        <!-- Flower server config -->
        <div class="grid-child">
            <h2>Flower Server Setup</h2>
            <div class="setup-flower">

                <!-- Config form -->
                <div class="grid-container-flower">
                    <!-- Row 0 -->
                    <div class="grid-child">
                        <label id="flower_url">Flower address:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="flower_address" onchange="onConfigChange()">
                    </div>
                    <div class="grid-child">
                        <label>Flower port:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="flower_port" onchange="onConfigChange()">
                    </div>
                    <div class="grid-child">
                        <label>Flower API port:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="flower_api_port" onchange="onConfigChange()">
                    </div>

                    <!-- Row 1 -->
                    <div class="grid-child">
                        <label>min_available_clients:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="min_available_clients">
                    </div>
                    <div class="grid-child">
                        <label>num_rounds:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="num_rounds">
                    </div>
                    <div class="grid-child"></div>
                    <div class="grid-child"></div>

                    <!-- Row 2 -->
                    <div class="grid-child">
                        <label>min_fit_clients:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="min_fit_clients">
                    </div>
                    <div class="grid-child">
                        <label>fraction_fit:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="fraction_fit">
                    </div>
                    <div class="grid-child">
                        <label>batch_size:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="batch_size">
                    </div>

                    <!-- Row 3 -->
                    <div class="grid-child">
                        <label>min_eval_clients:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="min_eval_clients">
                    </div>
                    <div class="grid-child">
                        <label>fraction_eval:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="fraction_eval">
                    </div>
                    <div class="grid-child">
                        <label>local_epochs:</label>
                    </div>
                    <div class="grid-child">
                        <input type="text" id="local_epochs">
                    </div>
                </div>

                <div>
                    <button onclick="onStartFlowerServer()">Start</button>
                    <button onclick="onStopFlowerServer()">Stop</button>
                    <button onclick="onGetFlowerStatus()">Refresh</button>
                    <button onclick="onGoToLogs()">Logs</button>
                </div>
                <label id="flower_server_response">---</label>
            </div>
        </div>
    </div>

    <h2> Remote Devices </h2>
    <div class="devices">
        <form action="/reset" method="POST">
            <button type="submit" id="newtestBtn" hidden>Reset</button>
        </form>
        <table id="table">
            <tr>
                <th>Fold</th>
                <th>Client</th>
                <th>Device Info</th>
                <th>Status</th>
            </tr>
            <% for( var i=0; i < devices.length; i++){ %>
                <tr>
                    <td>
                        <%= devices[i][0] %>
                    </td>
                    <td>
                        <%= devices[i][1] %>
                    </td>
                    <td>
                        <%= devices[i][2] %>
                    </td>
                    <td>
                        <%= devices[i][3] %>
                    </td>
                </tr>
                <% } %>
        </table>
    </div>
</body>

<script type="text/javascript">

    var flower_url = $('#flower_address')[0];
    var flower_port = $('#flower_port')[0];
    var flower_api_port = $('#flower_api_port')[0];
    var fraction_fit = $('#fraction_fit')[0];
    var fraction_eval = $('#fraction_eval')[0];
    var min_fit_clients = $('#min_fit_clients')[0];
    var min_eval_clients = $('#min_eval_clients')[0];
    var min_available_clients = $('#min_available_clients')[0];
    var batch_size = $('#batch_size')[0];
    var local_epochs = $('#local_epochs')[0];
    var num_rounds = $('#num_rounds')[0];
    var flower_status = $('#flower_server_response')[0];

    flower_url.value = "<%= flower_server %>";
    flower_port.value = "<%= flower_port %>";
    flower_api_port.value = "<%= flower_api_port %>";

    // Get the initial value for 'fold' (defined on index.js)
    var fold = document.getElementById("fold");
    fold.value = <%= fold %>;

    onGetFlowerStatus();

    // When a new Fold value is selected
    function onFoldChanged() {
        post('/setConfig/', { fold: fold.value,
                              flower_url: flower_url.value,
                              flower_port: flower_port.value,
                              flower_api_port: flower_api_port.value });
    }

    function onConfigChange() {
        post('/setConfig/', { fold: fold.value,
                              flower_url: flower_url.value,
                              flower_port: flower_port.value,
                              flower_api_port: flower_api_port.value });
    }

    // Post a request
    function post(path, params, method = 'post') {

        const form = document.createElement('form');
        form.method = method;
        form.action = path;

        for (const key in params) {
            if (params.hasOwnProperty(key)) {
                const hiddenField = document.createElement('input');
                hiddenField.type = 'hidden';
                hiddenField.name = key;
                hiddenField.value = params[key];

                form.appendChild(hiddenField);
            }
        }

        document.body.appendChild(form);
        form.submit();

        return false;
    }

    function onGoToLogs() {
        if (flower_url.value)
            window.open("http://" + flower_url.value + ":" + flower_api_port.value, "_blank");
        else
            flower_status.innerHTML = "Missing flower address.";
    }

    function onGetFlowerStatus() {
        fetch('http://' + flower_url.value + ":" + flower_api_port.value + '/status')
            .then(function(response) {
                return response.json();
            })
            .then(function(data) {
                flower_status.innerHTML = (data.isRunning) ? "Server Running" : "Server not Running";

                // Update UI with values from the server
                fraction_fit.value = data.fraction_fit;
                fraction_eval.value = data.fraction_eval;
                min_fit_clients.value = data.min_fit_clients;
                min_eval_clients.value = data.min_eval_clients;
                min_available_clients.value = data.min_available_clients;
                batch_size.value = data.batch_size;
                local_epochs.value = data.local_epochs;
                num_rounds.value = data.num_rounds;
            })
            .catch(error => {
                flower_status.innerHTML = error.message;
            });
    }

    function onStartFlowerServer() {
        postOnFlowerServer('/run');

        // After send the request, get a new status after 3 sec.
        setTimeout(function() {
            onGetFlowerStatus();
        }, 3000);

        flower_status.innerHTML = "Flower server starting.";
    }

    function onStopFlowerServer() {
        postOnFlowerServer('/stop');
    }

    // Post on Flower Server
    function postOnFlowerServer(api_path) {
        var form = new FormData();
        var req = new XMLHttpRequest();

        req.open("POST", 'http://' + flower_url.value + ":" + flower_api_port.value + api_path, true);

        form.append("fraction_fit", fraction_fit.value);
        form.append("fraction_eval", fraction_eval.value);
        form.append("min_fit_clients", min_fit_clients.value);
        form.append("min_eval_clients", min_eval_clients.value);
        form.append("min_available_clients", min_available_clients.value);
        form.append("batch_size", batch_size.value);
        form.append("local_epochs", local_epochs.value);
        form.append("num_rounds", num_rounds.value);

        req.onreadystatechange = function() {
            if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                if (req.response)
                    flower_status.innerHTML = JSON.parse(req.response).reason;
            } else {
                if (req.response)
                    flower_status.innerHTML = JSON.parse(req.response).reason;
            }
        }
        req.send(form);
    }

    // Refresh the "Remote Devices" list every 3 secs.
    var interval = 3000;
    function doAjax() {
        $.ajax({
            type: 'GET',
            url: '/getDevices',
            data: $(this).serialize(),
            dataType: 'json',
            success: function (data) {
                var table = document.getElementById("table");

                for (var i = table.rows.length; i > 1; i = table.rows.length) {
                    table.deleteRow(i - 1);
                }

                for (var i = 0; i < data.devices.length; i++) {
                    var row = table.insertRow(table.rows.length);
                    row.insertCell(0).innerHTML = data.devices[i][0];
                    row.insertCell(1).innerHTML = data.devices[i][1];
                    row.insertCell(2).innerHTML = data.devices[i][2];
                    row.insertCell(3).innerHTML = data.devices[i][3];
                }

                if (table.rows.length > 1)
                    $("#newtestBtn").show();
                else
                    $("#newtestBtn").hide();
            },
            complete: function (data) {
                // Schedule the next
                setTimeout(doAjax, interval);
            }
        });
    }
    setTimeout(doAjax, interval);

</script>

</html>